---
exclude:
  (?x)^(
  __NONE__)$
repos:
#  - repo: https://github.com/executablebooks/mdformat
#    # Do this before other tools "fixing" the line endings
#    rev: 0.7.22
#    hooks:
#      - id: mdformat
#        name: Format Markdown
#        entry: mdformat  # Executable to run, with fixed options
#        language: python
#        types: [markdown]
#        args: [--number]
#        additional_dependencies:
#          - mdformat-toc
#          - mdformat-gfm
#          - mdformat-beautysh
#          - setuptools
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # - id: no-commit-to-branch
      #  args: [--branch, main]
      - id: debug-statements
      - id: end-of-file-fixer
      - id: trailing-whitespace
        exclude: .*\.md$
      - id: check-json
      - id: mixed-line-ending
      - id: check-builtin-literals
        args: [--ignore=dict]
      - id: check-ast
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
        exclude: ^(test/.*)$
      - id: fix-byte-order-marker
      - id: check-case-conflict
  - repo: https://github.com/lovesegfault/beautysh.git
    rev: v6.2.1
    hooks:
      - id: beautysh
        additional_dependencies:
          - setuptools
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        args: [-Loll]
        exclude: ^(flake\.nix|src/utils/prompt\.ts)$
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
  - repo: local
    hooks:
      - id: aicommit2
        name: AI Commit Message Generator
        entry: |
          python -c "
          import shutil, sys, subprocess
          if shutil.which('aicommit2'):
              msg_path = sys.argv[1] if len(sys.argv) > 1 else '.git/COMMIT_EDITMSG'
              subprocess.run(['aicommit2', '--pre-commit', msg_path] + sys.argv[2:], check=True)
          else:
              print('aicommit2 is not available. Skipping AI Commit Message Generator.')
          "
        language: python
        stages: [prepare-commit-msg]
        always_run: true
